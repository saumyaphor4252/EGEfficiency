# hltGetConfiguration /dev/CMSSW_14_0_0/GRun/V156 --path HLTriggerFirstPath,HLT_Ele30_WPTight_Gsf_v7,HLT_Ele32_WPTight_Gsf_v21,HLT_Ele115_CaloIdVT_GsfTrkIdT_v21,HLT_Ele135_CaloIdVT_GsfTrkIdT_v14,HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v25,HLT_DoubleEle33_CaloIdL_MW_v24,HLTriggerFinalPath --output minimal --mc --process HLTX --type GRun --globaltag 140X_mcRun3_2024_realistic_EOR3_TkDPGv6 --max-events -1 --unprescale --eras Run3 --l1-emulator FullMC --l1 L1Menu_Collisions2024_v1_2_0_xml --input dataset:/RelValZEE_14/CMSSW_14_0_9-PU_140X_mcRun3_2024_realistic_EOR3_TkDPGv6_RV245_2024-v1/GEN-SIM-DIGI-RAW --customise HLTrigger/Configuration/customizeHLTforEGamma.customiseEGammaMenuDev,HLTrigger/Configuration/customizeHLTforEGamma.customiseEGammaInputContent

Unaccessible: 0
Accessible: 1170
1170
Unaccessible: 1170
Accessible: 0
0
# /dev/CMSSW_14_0_0/GRun/V156 (CMSSW_14_0_11)

import FWCore.ParameterSet.Config as cms

from Configuration.Eras.Era_Run3_cff import Run3
process = cms.Process( "HLTX", Run3 )

process.load("Configuration.StandardSequences.Accelerators_cff")

process.HLTConfigVersion = cms.PSet(
  tableName = cms.string("/dev/CMSSW_14_0_0/GRun/V156")
)

process.HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
process.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
process.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
process.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
process.HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
process.HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
process.HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
process.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
process.HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
process.HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
process.HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.streams = cms.PSet( 
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  DQMPPSRandom = cms.vstring( 'DQMPPSRandom' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingHH = cms.vstring( 'ParkingHH' ),
  ParkingLLP = cms.vstring( 'ParkingLLP' ),
  ParkingSingleMuon0 = cms.vstring( 'ParkingSingleMuon0' ),
  ParkingSingleMuon1 = cms.vstring( 'ParkingSingleMuon1' ),
  ParkingSingleMuon10 = cms.vstring( 'ParkingSingleMuon10' ),
  ParkingSingleMuon11 = cms.vstring( 'ParkingSingleMuon11' ),
  ParkingSingleMuon2 = cms.vstring( 'ParkingSingleMuon2' ),
  ParkingSingleMuon3 = cms.vstring( 'ParkingSingleMuon3' ),
  ParkingSingleMuon4 = cms.vstring( 'ParkingSingleMuon4' ),
  ParkingSingleMuon5 = cms.vstring( 'ParkingSingleMuon5' ),
  ParkingSingleMuon6 = cms.vstring( 'ParkingSingleMuon6' ),
  ParkingSingleMuon7 = cms.vstring( 'ParkingSingleMuon7' ),
  ParkingSingleMuon8 = cms.vstring( 'ParkingSingleMuon8' ),
  ParkingSingleMuon9 = cms.vstring( 'ParkingSingleMuon9' ),
  ParkingVBF0 = cms.vstring( 'ParkingVBF0',
    'ParkingVBF1' ),
  ParkingVBF1 = cms.vstring( 'ParkingVBF2',
    'ParkingVBF3' ),
  ParkingVBF2 = cms.vstring( 'ParkingVBF4',
    'ParkingVBF5' ),
  ParkingVBF3 = cms.vstring( 'ParkingVBF6',
    'ParkingVBF7' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HLTPhysics',
    'HcalNZS',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsDispJetBTagMuEGTau = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'MuonEG',
    'Tau' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsHLTPhysics0 = cms.vstring( 'EphemeralHLTPhysics0',
    'EphemeralHLTPhysics1' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics2',
    'EphemeralHLTPhysics3' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics4',
    'EphemeralHLTPhysics5' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics6',
    'EphemeralHLTPhysics7' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias0 = cms.vstring( 'EphemeralZeroBias0',
    'EphemeralZeroBias1' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias2',
    'EphemeralZeroBias3' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias4',
    'EphemeralZeroBias5' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias6',
    'EphemeralZeroBias7' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
process.datasets = cms.PSet( 
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v25',
    'AlCa_PFJet40_v30' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v8' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v8',
    'AlCa_LumiPixelsCounts_ZeroBias_v10' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v23',
    'AlCa_EcalEtaEEonly_v23',
    'AlCa_EcalPi0EBonly_v23',
    'AlCa_EcalPi0EEonly_v23' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v7',
    'HLT_PPSMaxTracksPerRP4_v7' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v7',
    'HLT_PPSMaxTracksPerRP4_v7' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v18' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v23',
    'HLT_BTagMu_AK4DiJet170_Mu5_v22',
    'HLT_BTagMu_AK4DiJet20_Mu5_v23',
    'HLT_BTagMu_AK4DiJet40_Mu5_v23',
    'HLT_BTagMu_AK4DiJet70_Mu5_v23',
    'HLT_BTagMu_AK4Jet300_Mu5_v22',
    'HLT_BTagMu_AK8DiJet170_Mu5_v19',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v12',
    'HLT_BTagMu_AK8Jet300_Mu5_v22' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v12',
    'HLT_IsoTrackHE_v12',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v7',
    'HLT_PFJet40_GPUvsCPU_v5' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v6' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v10',
    'DQM_HcalReconstruction_v8',
    'DQM_PixelReconstruction_v10' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v21',
    'HLT_ZeroBias_Beamspot_v14' ),
  DQMPPSRandom = cms.vstring( 'HLT_PPSRandom_v1' ),
  DisplacedJet = cms.vstring( 'HLT_CaloMET60_DTCluster50_v9',
    'HLT_CaloMET60_DTClusterNoMB1S50_v9',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v4',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v4',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_HT350_v5',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT425_v17',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v8',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v5',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_L1MET_DTCluster50_v9',
    'HLT_L1MET_DTClusterNoMB1S50_v9',
    'HLT_L1Mu6HT240_v7',
    'HLT_L1SingleLLPJet_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v5',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v9',
    'HLT_PFJet200_TimeGt2p5ns_v8',
    'HLT_PFJet200_TimeLtNeg2p5ns_v8' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DiphotonMVA14p25_Mass90_v1',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v8',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v8',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v30',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v30',
    'HLT_DoubleEle8_eta1p22_mMax6_v8',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v3',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v26',
    'HLT_Ele15_IsoVVVL_PFHT450_v26',
    'HLT_Ele15_IsoVVVL_PFHT600_v30',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v11',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v4',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v4',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v4',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v23',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v23',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v28',
    'HLT_Ele50_IsoVVVL_PFHT450_v26',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22',
    'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21',
    'HLT_Photon30EB_TightID_TightIso_v10',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v8',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v6',
    'HLT_Photon35_TwoProngs35_v11',
    'HLT_Photon40EB_TightID_TightIso_v1',
    'HLT_Photon40EB_v1',
    'HLT_Photon45EB_TightID_TightIso_v1',
    'HLT_Photon45EB_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50EB_v2',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon55EB_TightID_TightIso_v2',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v8',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v15',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_SingleEle8_SingleEGL1_v7',
    'HLT_SingleEle8_v7' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DiphotonMVA14p25_Mass90_v1',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v8',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v8',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v30',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v30',
    'HLT_DoubleEle8_eta1p22_mMax6_v8',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v3',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v26',
    'HLT_Ele15_IsoVVVL_PFHT450_v26',
    'HLT_Ele15_IsoVVVL_PFHT600_v30',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v11',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v4',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v4',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v4',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v23',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v23',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v28',
    'HLT_Ele50_IsoVVVL_PFHT450_v26',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22',
    'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21',
    'HLT_Photon30EB_TightID_TightIso_v10',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v8',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v6',
    'HLT_Photon35_TwoProngs35_v11',
    'HLT_Photon40EB_TightID_TightIso_v1',
    'HLT_Photon40EB_v1',
    'HLT_Photon45EB_TightID_TightIso_v1',
    'HLT_Photon45EB_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50EB_v2',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon55EB_TightID_TightIso_v2',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v8',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v15',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_SingleEle8_SingleEGL1_v7',
    'HLT_SingleEle8_v7' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EphemeralHLTPhysics0 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralZeroBias0 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v23',
    'HLT_PFJet500_v31',
    'HLT_Physics_v12' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v21',
    'HLT_ZeroBias_Beamspot_v14' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_IsoMu20_v25',
    'HLT_IsoMu24_v23',
    'HLT_IsoMu27_v26',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v25',
    'HLT_Physics_v12',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_v11' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v10',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v10',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v11',
    'HLT_PFHT510_v27',
    'HLT_PFJet260_v30',
    'HLT_PFJet320_v30',
    'HLT_PFMET130_PFMHT130_IDTight_v30',
    'HLT_PFMET140_PFMHT140_IDTight_v30' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v12' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v19',
    'HLT_HcalPhiSym_v21' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v4',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v4',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v4',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v10',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v4',
    'HLT_AK8PFJet140_v25',
    'HLT_AK8PFJet200_v25',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v7',
    'HLT_AK8PFJet220_SoftDropMass40_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet230_SoftDropMass40_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet260_v26',
    'HLT_AK8PFJet275_Nch40_v4',
    'HLT_AK8PFJet275_Nch45_v4',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet320_v26',
    'HLT_AK8PFJet380_SoftDropMass30_v4',
    'HLT_AK8PFJet400_SoftDropMass30_v4',
    'HLT_AK8PFJet400_v26',
    'HLT_AK8PFJet40_v26',
    'HLT_AK8PFJet425_SoftDropMass30_v4',
    'HLT_AK8PFJet450_SoftDropMass30_v4',
    'HLT_AK8PFJet450_v26',
    'HLT_AK8PFJet500_v26',
    'HLT_AK8PFJet550_v21',
    'HLT_AK8PFJet60_v25',
    'HLT_AK8PFJet80_v26',
    'HLT_AK8PFJetFwd140_v24',
    'HLT_AK8PFJetFwd200_v24',
    'HLT_AK8PFJetFwd260_v25',
    'HLT_AK8PFJetFwd320_v25',
    'HLT_AK8PFJetFwd400_v25',
    'HLT_AK8PFJetFwd40_v25',
    'HLT_AK8PFJetFwd450_v25',
    'HLT_AK8PFJetFwd500_v25',
    'HLT_AK8PFJetFwd60_v24',
    'HLT_AK8PFJetFwd80_v24',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_DiPFJetAve100_HFJEC_v27',
    'HLT_DiPFJetAve140_v23',
    'HLT_DiPFJetAve160_HFJEC_v26',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v4',
    'HLT_DiPFJetAve200_v23',
    'HLT_DiPFJetAve220_HFJEC_v26',
    'HLT_DiPFJetAve260_HFJEC_v9',
    'HLT_DiPFJetAve260_v24',
    'HLT_DiPFJetAve300_HFJEC_v26',
    'HLT_DiPFJetAve320_v24',
    'HLT_DiPFJetAve400_v24',
    'HLT_DiPFJetAve40_v24',
    'HLT_DiPFJetAve500_v24',
    'HLT_DiPFJetAve60_HFJEC_v25',
    'HLT_DiPFJetAve60_v24',
    'HLT_DiPFJetAve80_HFJEC_v27',
    'HLT_DiPFJetAve80_v24',
    'HLT_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_L1AXOVTight_v2',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12eta2p3_PFJet40_v11',
    'HLT_Mu12eta2p3_v11',
    'HLT_PFHT1050_v28',
    'HLT_PFHT180_v27',
    'HLT_PFHT250_v27',
    'HLT_PFHT350_v29',
    'HLT_PFHT370_v27',
    'HLT_PFHT430_v27',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v22',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFHT510_v27',
    'HLT_PFHT590_v27',
    'HLT_PFHT680_v27',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v22',
    'HLT_PFHT780_v27',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v22',
    'HLT_PFHT890_v27',
    'HLT_PFJet110_v10',
    'HLT_PFJet140_v29',
    'HLT_PFJet200_v29',
    'HLT_PFJet260_v30',
    'HLT_PFJet320_v30',
    'HLT_PFJet400_v30',
    'HLT_PFJet40_v31',
    'HLT_PFJet450_v31',
    'HLT_PFJet500_v31',
    'HLT_PFJet550_v21',
    'HLT_PFJet60_v31',
    'HLT_PFJet80_v31',
    'HLT_PFJetFwd140_v28',
    'HLT_PFJetFwd200_v28',
    'HLT_PFJetFwd260_v29',
    'HLT_PFJetFwd320_v29',
    'HLT_PFJetFwd400_v29',
    'HLT_PFJetFwd40_v29',
    'HLT_PFJetFwd450_v29',
    'HLT_PFJetFwd500_v29',
    'HLT_PFJetFwd60_v29',
    'HLT_PFJetFwd80_v28',
    'HLT_PFMET105_IsoTrk50_v11',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v19',
    'HLT_PFMET120_PFMHT120_IDTight_v30',
    'HLT_PFMET130_PFMHT130_IDTight_v30',
    'HLT_PFMET140_PFMHT140_IDTight_v30',
    'HLT_PFMET200_BeamHaloCleaned_v19',
    'HLT_PFMET200_NotCleaned_v19',
    'HLT_PFMET250_NotCleaned_v19',
    'HLT_PFMET300_NotCleaned_v19',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v19',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v30',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v29',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v29',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v21',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v19' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v4',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v4',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v4',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v10',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v4',
    'HLT_AK8PFJet140_v25',
    'HLT_AK8PFJet200_v25',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v7',
    'HLT_AK8PFJet220_SoftDropMass40_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet230_SoftDropMass40_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet260_v26',
    'HLT_AK8PFJet275_Nch40_v4',
    'HLT_AK8PFJet275_Nch45_v4',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet320_v26',
    'HLT_AK8PFJet380_SoftDropMass30_v4',
    'HLT_AK8PFJet400_SoftDropMass30_v4',
    'HLT_AK8PFJet400_v26',
    'HLT_AK8PFJet40_v26',
    'HLT_AK8PFJet425_SoftDropMass30_v4',
    'HLT_AK8PFJet450_SoftDropMass30_v4',
    'HLT_AK8PFJet450_v26',
    'HLT_AK8PFJet500_v26',
    'HLT_AK8PFJet550_v21',
    'HLT_AK8PFJet60_v25',
    'HLT_AK8PFJet80_v26',
    'HLT_AK8PFJetFwd140_v24',
    'HLT_AK8PFJetFwd200_v24',
    'HLT_AK8PFJetFwd260_v25',
    'HLT_AK8PFJetFwd320_v25',
    'HLT_AK8PFJetFwd400_v25',
    'HLT_AK8PFJetFwd40_v25',
    'HLT_AK8PFJetFwd450_v25',
    'HLT_AK8PFJetFwd500_v25',
    'HLT_AK8PFJetFwd60_v24',
    'HLT_AK8PFJetFwd80_v24',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_DiPFJetAve100_HFJEC_v27',
    'HLT_DiPFJetAve140_v23',
    'HLT_DiPFJetAve160_HFJEC_v26',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v4',
    'HLT_DiPFJetAve200_v23',
    'HLT_DiPFJetAve220_HFJEC_v26',
    'HLT_DiPFJetAve260_HFJEC_v9',
    'HLT_DiPFJetAve260_v24',
    'HLT_DiPFJetAve300_HFJEC_v26',
    'HLT_DiPFJetAve320_v24',
    'HLT_DiPFJetAve400_v24',
    'HLT_DiPFJetAve40_v24',
    'HLT_DiPFJetAve500_v24',
    'HLT_DiPFJetAve60_HFJEC_v25',
    'HLT_DiPFJetAve60_v24',
    'HLT_DiPFJetAve80_HFJEC_v27',
    'HLT_DiPFJetAve80_v24',
    'HLT_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_L1AXOVTight_v2',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12eta2p3_PFJet40_v11',
    'HLT_Mu12eta2p3_v11',
    'HLT_PFHT1050_v28',
    'HLT_PFHT180_v27',
    'HLT_PFHT250_v27',
    'HLT_PFHT350_v29',
    'HLT_PFHT370_v27',
    'HLT_PFHT430_v27',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v22',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFHT510_v27',
    'HLT_PFHT590_v27',
    'HLT_PFHT680_v27',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v22',
    'HLT_PFHT780_v27',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v22',
    'HLT_PFHT890_v27',
    'HLT_PFJet110_v10',
    'HLT_PFJet140_v29',
    'HLT_PFJet200_v29',
    'HLT_PFJet260_v30',
    'HLT_PFJet320_v30',
    'HLT_PFJet400_v30',
    'HLT_PFJet40_v31',
    'HLT_PFJet450_v31',
    'HLT_PFJet500_v31',
    'HLT_PFJet550_v21',
    'HLT_PFJet60_v31',
    'HLT_PFJet80_v31',
    'HLT_PFJetFwd140_v28',
    'HLT_PFJetFwd200_v28',
    'HLT_PFJetFwd260_v29',
    'HLT_PFJetFwd320_v29',
    'HLT_PFJetFwd400_v29',
    'HLT_PFJetFwd40_v29',
    'HLT_PFJetFwd450_v29',
    'HLT_PFJetFwd500_v29',
    'HLT_PFJetFwd60_v29',
    'HLT_PFJetFwd80_v28',
    'HLT_PFMET105_IsoTrk50_v11',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v19',
    'HLT_PFMET120_PFMHT120_IDTight_v30',
    'HLT_PFMET130_PFMHT130_IDTight_v30',
    'HLT_PFMET140_PFMHT140_IDTight_v30',
    'HLT_PFMET200_BeamHaloCleaned_v19',
    'HLT_PFMET200_NotCleaned_v19',
    'HLT_PFMET250_NotCleaned_v19',
    'HLT_PFMET300_NotCleaned_v19',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v19',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v30',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v29',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v29',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v21',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v19' ),
  L1Accept = cms.vstring( 'DST_Physics_v14',
    'DST_ZeroBias_v9' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v16',
    'MC_AK4CaloJets_v17',
    'MC_AK4PFJetPNet_v3',
    'MC_AK4PFJets_v27',
    'MC_AK8CaloHT_v16',
    'MC_AK8PFHT_v26',
    'MC_AK8PFJetPNet_v3',
    'MC_AK8PFJets_v27',
    'MC_CaloHT_v16',
    'MC_CaloMET_JetIdCleaned_v17',
    'MC_CaloMET_v16',
    'MC_CaloMHT_v16',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v21',
    'MC_DoubleEle5_CaloIdL_MW_v24',
    'MC_DoubleMuNoFiltersNoVtx_v15',
    'MC_DoubleMu_TrkIsoVVL_DZ_v21',
    'MC_Egamma_Open_Unseeded_v6',
    'MC_Egamma_Open_v6',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'MC_Ele5_WPTight_Gsf_v16',
    'MC_IsoMu_v25',
    'MC_PFHT_v26',
    'MC_PFMET_v27',
    'MC_PFMHT_v26',
    'MC_PFScouting_v4',
    'MC_ReducedIterativeTracking_v20' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v11',
    'HLT_CscCluster100_Ele5_v2',
    'HLT_CscCluster100_Mu5_v4',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v4',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v6',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v10',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v20',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v20',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v18',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v11',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_v25',
    'HLT_IsoMu24_OneProng32_v7',
    'HLT_IsoMu24_TwoProngs35_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_v25',
    'HLT_IsoMu24_v23',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v26',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v10',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v10',
    'HLT_IsoTrk200_L1SingleMuShower_v2',
    'HLT_IsoTrk400_L1SingleMuShower_v2',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v3',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v25',
    'HLT_Mu15_IsoVVVL_PFHT450_v25',
    'HLT_Mu15_IsoVVVL_PFHT600_v29',
    'HLT_Mu15_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v4',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v25',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v24',
    'HLT_Mu17_TrkIsoVVL_v23',
    'HLT_Mu17_v23',
    'HLT_Mu18_Mu9_SameSign_v14',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v13',
    'HLT_Mu19_TrkIsoVVL_v14',
    'HLT_Mu19_v14',
    'HLT_Mu20_v22',
    'HLT_Mu27_v23',
    'HLT_Mu37_TkMu27_v15',
    'HLT_Mu3_PFJet40_v26',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v12',
    'HLT_Mu50_IsoVVVL_PFHT450_v25',
    'HLT_Mu50_L1SingleMuShower_v9',
    'HLT_Mu50_v23',
    'HLT_Mu55_v13',
    'HLT_Mu8_TrkIsoVVL_v22',
    'HLT_Mu8_v22',
    'HLT_TripleMu_10_5_5_DZ_v20',
    'HLT_TripleMu_12_10_5_v20',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v13',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v18',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v15' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v11',
    'HLT_CscCluster100_Ele5_v2',
    'HLT_CscCluster100_Mu5_v4',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v4',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v6',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v10',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v20',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v20',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v18',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v11',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v4',
    'HLT_IsoMu20_v25',
    'HLT_IsoMu24_OneProng32_v7',
    'HLT_IsoMu24_TwoProngs35_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_v25',
    'HLT_IsoMu24_v23',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v26',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v10',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v10',
    'HLT_IsoTrk200_L1SingleMuShower_v2',
    'HLT_IsoTrk400_L1SingleMuShower_v2',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v3',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v25',
    'HLT_Mu15_IsoVVVL_PFHT450_v25',
    'HLT_Mu15_IsoVVVL_PFHT600_v29',
    'HLT_Mu15_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v4',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v25',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v24',
    'HLT_Mu17_TrkIsoVVL_v23',
    'HLT_Mu17_v23',
    'HLT_Mu18_Mu9_SameSign_v14',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v13',
    'HLT_Mu19_TrkIsoVVL_v14',
    'HLT_Mu19_v14',
    'HLT_Mu20_v22',
    'HLT_Mu27_v23',
    'HLT_Mu37_TkMu27_v15',
    'HLT_Mu3_PFJet40_v26',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v12',
    'HLT_Mu50_IsoVVVL_PFHT450_v25',
    'HLT_Mu50_L1SingleMuShower_v9',
    'HLT_Mu50_v23',
    'HLT_Mu55_v13',
    'HLT_Mu8_TrkIsoVVL_v22',
    'HLT_Mu8_v22',
    'HLT_TripleMu_10_5_5_DZ_v20',
    'HLT_TripleMu_12_10_5_v20',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v13',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v18',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v15' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v27',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v27',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v27',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v17',
    'HLT_Mu17_Photon30_IsoCaloId_v16',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v9',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v17',
    'HLT_Mu27_Ele37_CaloIdL_MW_v15',
    'HLT_Mu37_Ele27_CaloIdL_MW_v15',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v13',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v13',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v28',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v28',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v29',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v29',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v21' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v8',
    'HLT_CDC_L2cosmic_5p5_er1p0_v8',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v12',
    'HLT_L2Mu10_NoVertex_NoBPTX_v13',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v12',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v11',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE30_NoBPTX_v12',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v12' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v4',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v4',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v4',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v4',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v10',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v4',
    'HLT_AK8PFJet140_v25',
    'HLT_AK8PFJet200_v25',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v7',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v7',
    'HLT_AK8PFJet220_SoftDropMass40_v11',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet230_SoftDropMass40_v11',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet260_v26',
    'HLT_AK8PFJet275_Nch40_v4',
    'HLT_AK8PFJet275_Nch45_v4',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v7',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v7',
    'HLT_AK8PFJet320_v26',
    'HLT_AK8PFJet380_SoftDropMass30_v4',
    'HLT_AK8PFJet400_SoftDropMass30_v4',
    'HLT_AK8PFJet400_v26',
    'HLT_AK8PFJet40_v26',
    'HLT_AK8PFJet425_SoftDropMass30_v4',
    'HLT_AK8PFJet450_SoftDropMass30_v4',
    'HLT_AK8PFJet450_v26',
    'HLT_AK8PFJet500_v26',
    'HLT_AK8PFJet550_v21',
    'HLT_AK8PFJet60_v25',
    'HLT_AK8PFJet80_v26',
    'HLT_AK8PFJetFwd140_v24',
    'HLT_AK8PFJetFwd200_v24',
    'HLT_AK8PFJetFwd260_v25',
    'HLT_AK8PFJetFwd320_v25',
    'HLT_AK8PFJetFwd400_v25',
    'HLT_AK8PFJetFwd40_v25',
    'HLT_AK8PFJetFwd450_v25',
    'HLT_AK8PFJetFwd500_v25',
    'HLT_AK8PFJetFwd60_v24',
    'HLT_AK8PFJetFwd80_v24',
    'HLT_BTagMu_AK4DiJet110_Mu5_v23',
    'HLT_BTagMu_AK4DiJet170_Mu5_v22',
    'HLT_BTagMu_AK4DiJet20_Mu5_v23',
    'HLT_BTagMu_AK4DiJet40_Mu5_v23',
    'HLT_BTagMu_AK4DiJet70_Mu5_v23',
    'HLT_BTagMu_AK4Jet300_Mu5_v22',
    'HLT_BTagMu_AK8DiJet170_Mu5_v19',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v12',
    'HLT_BTagMu_AK8Jet300_Mu5_v22',
    'HLT_CDC_L2cosmic_10_er1p0_v8',
    'HLT_CDC_L2cosmic_5p5_er1p0_v8',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET60_DTCluster50_v9',
    'HLT_CaloMET60_DTClusterNoMB1S50_v9',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_CascadeMu100_v11',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v27',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v27',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v27',
    'HLT_DiPFJetAve100_HFJEC_v27',
    'HLT_DiPFJetAve140_v23',
    'HLT_DiPFJetAve160_HFJEC_v26',
    'HLT_DiPFJetAve200_v23',
    'HLT_DiPFJetAve220_HFJEC_v26',
    'HLT_DiPFJetAve260_HFJEC_v9',
    'HLT_DiPFJetAve260_v24',
    'HLT_DiPFJetAve300_HFJEC_v26',
    'HLT_DiPFJetAve320_v24',
    'HLT_DiPFJetAve400_v24',
    'HLT_DiPFJetAve40_v24',
    'HLT_DiPFJetAve500_v24',
    'HLT_DiPFJetAve60_HFJEC_v25',
    'HLT_DiPFJetAve60_v24',
    'HLT_DiPFJetAve80_HFJEC_v27',
    'HLT_DiPFJetAve80_v24',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DiphotonMVA14p25_Mass90_v1',
    'HLT_DiphotonMVA14p25_Tight_Mass90_v1',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v6',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v30',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v30',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v10',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v6',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v11',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v10',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v10',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v4',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v20',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v20',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v20',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v18',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v3',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v26',
    'HLT_Ele15_IsoVVVL_PFHT450_v26',
    'HLT_Ele15_IsoVVVL_PFHT600_v30',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v28',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v23',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v23',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v10',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v28',
    'HLT_Ele50_IsoVVVL_PFHT450_v26',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v28',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v4',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v4',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6')+cms.vstring( 'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_HT350_v5',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT425_v17',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v8',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v5',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_HcalNZS_v19',
    'HLT_HcalPhiSym_v21',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_v25',
    'HLT_IsoMu24_OneProng32_v7',
    'HLT_IsoMu24_TwoProngs35_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v11',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v6',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v11',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v10',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v4',
    'HLT_IsoMu24_eta2p1_PFHT250_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v4',
    'HLT_IsoMu24_eta2p1_v25',
    'HLT_IsoMu24_v23',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v6',
    'HLT_IsoMu27_v26',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v10',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v7',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v10',
    'HLT_IsoTrackHB_v12',
    'HLT_IsoTrackHE_v12',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_L1MET_DTCluster50_v9',
    'HLT_L1MET_DTClusterNoMB1S50_v9',
    'HLT_L1Mu6HT240_v7',
    'HLT_L1SingleLLPJet_v5',
    'HLT_L1SingleMuCosmics_v6',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v5',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v7',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v12',
    'HLT_L2Mu10_NoVertex_NoBPTX_v13',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v12',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v11',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v4',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v4',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v3',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v17',
    'HLT_Mu12eta2p3_PFJet40_v11',
    'HLT_Mu12eta2p3_v11',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v25',
    'HLT_Mu15_IsoVVVL_PFHT450_v25',
    'HLT_Mu15_IsoVVVL_PFHT600_v29',
    'HLT_Mu15_v13',
    'HLT_Mu17_Photon30_IsoCaloId_v16',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v3',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v4',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v25',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v24',
    'HLT_Mu17_TrkIsoVVL_v23',
    'HLT_Mu17_v23',
    'HLT_Mu18_Mu9_SameSign_v14',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v13',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v13',
    'HLT_Mu19_TrkIsoVVL_v14',
    'HLT_Mu19_v14',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v9',
    'HLT_Mu20_v22',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v25',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v17',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu27_Ele37_CaloIdL_MW_v15',
    'HLT_Mu27_v23',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu37_Ele27_CaloIdL_MW_v15',
    'HLT_Mu37_TkMu27_v15',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v9',
    'HLT_Mu3_PFJet40_v26',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v12',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v12',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v13',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v13',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu50_IsoVVVL_PFHT450_v25',
    'HLT_Mu50_L1SingleMuShower_v9',
    'HLT_Mu50_v23',
    'HLT_Mu55_v13',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v28',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v28',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v29',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v29',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v8',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v11',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v4',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v7',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Mu8_TrkIsoVVL_v22',
    'HLT_Mu8_v22',
    'HLT_PFHT1050_v28',
    'HLT_PFHT180_v27',
    'HLT_PFHT250_v27',
    'HLT_PFHT350_v29',
    'HLT_PFHT370_v27',
    'HLT_PFHT430_v27',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v22',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFHT510_v27',
    'HLT_PFHT590_v27',
    'HLT_PFHT680_v27',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v22',
    'HLT_PFHT780_v27',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v22',
    'HLT_PFHT890_v27',
    'HLT_PFJet110_v10',
    'HLT_PFJet140_v29',
    'HLT_PFJet200_TimeGt2p5ns_v8',
    'HLT_PFJet200_TimeLtNeg2p5ns_v8',
    'HLT_PFJet200_v29',
    'HLT_PFJet260_v30',
    'HLT_PFJet320_v30',
    'HLT_PFJet400_v30',
    'HLT_PFJet40_v31',
    'HLT_PFJet450_v31',
    'HLT_PFJet500_v31',
    'HLT_PFJet550_v21',
    'HLT_PFJet60_v31',
    'HLT_PFJet80_v31',
    'HLT_PFJetFwd140_v28',
    'HLT_PFJetFwd200_v28',
    'HLT_PFJetFwd260_v29',
    'HLT_PFJetFwd320_v29',
    'HLT_PFJetFwd400_v29',
    'HLT_PFJetFwd40_v29',
    'HLT_PFJetFwd450_v29',
    'HLT_PFJetFwd500_v29',
    'HLT_PFJetFwd60_v29',
    'HLT_PFJetFwd80_v28',
    'HLT_PFMET105_IsoTrk50_v11',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v19',
    'HLT_PFMET120_PFMHT120_IDTight_v30',
    'HLT_PFMET130_PFMHT130_IDTight_v30',
    'HLT_PFMET140_PFMHT140_IDTight_v30',
    'HLT_PFMET200_BeamHaloCleaned_v19',
    'HLT_PFMET200_NotCleaned_v19',
    'HLT_PFMET250_NotCleaned_v19',
    'HLT_PFMET300_NotCleaned_v19',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v19',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v30',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v29',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v10',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v29',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v21',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v19',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22')+cms.vstring( 'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21',
    'HLT_Photon30EB_TightID_TightIso_v10',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v8',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v6',
    'HLT_Photon35_TwoProngs35_v11',
    'HLT_Photon40EB_TightID_TightIso_v1',
    'HLT_Photon40EB_v1',
    'HLT_Photon45EB_TightID_TightIso_v1',
    'HLT_Photon45EB_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v3',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v4',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v8',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v8',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v15',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_Physics_v12',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_Random_v3',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12',
    'HLT_TripleMu_10_5_5_DZ_v20',
    'HLT_TripleMu_12_10_5_v20',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v13',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v18',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v15',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE30_NoBPTX_v12',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v12',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstBXAfterTrain_v8',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_FirstCollisionInTrain_v9',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_LastCollisionInTrain_v8',
    'HLT_ZeroBias_v11') ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v15',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v17',
    'HLT_Dimuon0_Jpsi_NoVertexing_v18',
    'HLT_Dimuon0_Jpsi_v18',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v18',
    'HLT_Dimuon0_LowMass_L1_4_v18',
    'HLT_Dimuon0_LowMass_L1_TM530_v16',
    'HLT_Dimuon0_LowMass_v18',
    'HLT_Dimuon0_Upsilon_L1_4p5_v19',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v19',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v16',
    'HLT_Dimuon0_Upsilon_NoVertexing_v17',
    'HLT_Dimuon10_Upsilon_y1p4_v11',
    'HLT_Dimuon12_Upsilon_y1p4_v12',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v17',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v15',
    'HLT_Dimuon14_PsiPrime_v23',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v16',
    'HLT_Dimuon18_PsiPrime_v24',
    'HLT_Dimuon24_Phi_noCorrL1_v16',
    'HLT_Dimuon24_Upsilon_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_noCorrL1_v16',
    'HLT_Dimuon25_Jpsi_v24',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v16',
    'HLT_DoubleMu2_Jpsi_LowPt_v4',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v14',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v16',
    'HLT_DoubleMu3_Trk_Tau3mu_v22',
    'HLT_DoubleMu4_3_Bs_v25',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_3_Jpsi_v25',
    'HLT_DoubleMu4_3_LowMass_SS_v4',
    'HLT_DoubleMu4_3_LowMass_v11',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v10',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v17',
    'HLT_DoubleMu4_JpsiTrk_Bc_v10',
    'HLT_DoubleMu4_Jpsi_Displaced_v17',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v17',
    'HLT_DoubleMu4_LowMass_Displaced_v11',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v25',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v14',
    'HLT_Mu25_TkMu0_Phi_v18',
    'HLT_Mu30_TkMu0_Psi_v11',
    'HLT_Mu30_TkMu0_Upsilon_v11',
    'HLT_Mu4_L1DoubleMu_v11',
    'HLT_Mu7p5_L2Mu2_Jpsi_v20',
    'HLT_Mu7p5_L2Mu2_Upsilon_v20',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v14',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v14',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v15',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v12' ),
  ParkingHH = cms.vstring( 'HLT_PFHT250_QuadPFJet25_PNet1BTag0p20_PNet1Tauh0p50_v4',
    'HLT_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v4',
    'HLT_PFHT250_QuadPFJet25_v4',
    'HLT_PFHT250_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v4',
    'HLT_PFHT250_QuadPFJet30_PNet2BTagMean0p55_v4',
    'HLT_PFHT280_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v4',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v7',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v7',
    'HLT_PFHT280_QuadPFJet30_v7',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v7',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_2p0_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_4p3_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v11',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v19',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_4p3_v4',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_5p6_v4',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_v4',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v7',
    'HLT_PFHT400_SixPFJet32_v19',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v7',
    'HLT_PFHT450_SixPFJet36_v18' ),
  ParkingLLP = cms.vstring( 'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v5',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v5',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT650_DisplacedDijet60_Inclusive_v21',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v5' ),
  ParkingSingleMuon0 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon1 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon10 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon11 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon2 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon3 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon4 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon5 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon6 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon7 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon8 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingSingleMuon9 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v4',
    'HLT_Mu0_Barrel_L1HP11_v4',
    'HLT_Mu0_Barrel_L1HP6_IP6_v1',
    'HLT_Mu0_Barrel_L1HP6_v1',
    'HLT_Mu0_Barrel_L1HP7_v1',
    'HLT_Mu0_Barrel_L1HP8_v2',
    'HLT_Mu0_Barrel_L1HP9_v2',
    'HLT_Mu0_Barrel_v4',
    'HLT_Mu10_Barrel_L1HP11_IP6_v4',
    'HLT_Mu6_Barrel_L1HP7_IP6_v1',
    'HLT_Mu7_Barrel_L1HP8_IP6_v2',
    'HLT_Mu8_Barrel_L1HP9_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v4' ),
  ParkingVBF0 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF1 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF2 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF3 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF4 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF5 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF6 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  ParkingVBF7 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet100_88_70_30_v8',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet103_88_75_15_v15',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v8',
    'HLT_QuadPFJet105_88_75_30_v7',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet105_88_76_15_v15',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v4',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v4',
    'HLT_QuadPFJet111_90_80_15_v15',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v8',
    'HLT_QuadPFJet111_90_80_30_v7',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v6',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v4',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v4',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v4',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v4',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v4',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v4',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v4',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v4',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v4',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v4',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v11',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v4' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v21' ),
  ScoutingPFMonitor = cms.vstring( 'DST_PFScouting_AXOLoose_v2',
    'DST_PFScouting_AXONominal_v4',
    'DST_PFScouting_AXOTight_v4',
    'DST_PFScouting_AXOVLoose_v2',
    'DST_PFScouting_AXOVTight_v2',
    'DST_PFScouting_CICADALoose_v1',
    'DST_PFScouting_CICADAMedium_v1',
    'DST_PFScouting_CICADATight_v1',
    'DST_PFScouting_CICADAVLoose_v1',
    'DST_PFScouting_CICADAVTight_v1',
    'DST_PFScouting_DoubleEG_v4',
    'DST_PFScouting_DoubleMuon_v4',
    'DST_PFScouting_JetHT_v4',
    'DST_PFScouting_SingleMuon_v4',
    'DST_PFScouting_SinglePhotonEB_v1',
    'DST_PFScouting_ZeroBias_v2',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_IsoMu27_v26',
    'HLT_Mu50_v23',
    'HLT_PFHT1050_v28',
    'HLT_Photon200_v22' ),
  ScoutingPFRun3 = cms.vstring( 'DST_PFScouting_AXOLoose_v2',
    'DST_PFScouting_AXONominal_v4',
    'DST_PFScouting_AXOTight_v4',
    'DST_PFScouting_AXOVLoose_v2',
    'DST_PFScouting_AXOVTight_v2',
    'DST_PFScouting_CICADALoose_v1',
    'DST_PFScouting_CICADAMedium_v1',
    'DST_PFScouting_CICADATight_v1',
    'DST_PFScouting_CICADAVLoose_v1',
    'DST_PFScouting_CICADAVTight_v1',
    'DST_PFScouting_DatasetMuon_v4',
    'DST_PFScouting_DoubleEG_v4',
    'DST_PFScouting_DoubleMuon_v4',
    'DST_PFScouting_JetHT_v4',
    'DST_PFScouting_SingleMuon_v4',
    'DST_PFScouting_SinglePhotonEB_v1',
    'DST_PFScouting_ZeroBias_v2' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v6',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v11',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v6',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v10',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v10',
    'HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v10',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet60_v4',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet75_v4',
    'HLT_DoublePNetTauhPFJet30_Medium_L2NN_eta2p3_v4',
    'HLT_DoublePNetTauhPFJet30_Tight_L2NN_eta2p3_v4',
    'HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v11',
    'HLT_SinglePNetTauhPFJet130_Loose_L2NN_eta2p3_v4',
    'HLT_SinglePNetTauhPFJet130_Medium_L2NN_eta2p3_v4',
    'HLT_SinglePNetTauhPFJet130_Tight_L2NN_eta2p3_v4' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstBXAfterTrain_v8',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_FirstCollisionInTrain_v9',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_LastCollisionInTrain_v8',
    'HLT_ZeroBias_v11' )
)

process.CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCChannelMapperRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.CSCINdexerESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCIndexerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "L1TGlobalParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalTag = cms.ESSource( "PoolDBESSource",
    DBParameters = cms.PSet( 
      connectionRetrialTimeOut = cms.untracked.int32( 60 ),
      idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
      enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
      enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
      messageLevel = cms.untracked.int32( 0 ),
      authenticationPath = cms.untracked.string( "." ),
      connectionRetrialPeriod = cms.untracked.int32( 10 ),
      connectionTimeOut = cms.untracked.int32( 0 ),
      enableConnectionSharing = cms.untracked.bool( True )
    ),
    connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
    globaltag = cms.string( "None" ),
    snapshotTime = cms.string( "" ),
    toGet = cms.VPSet( 
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineLegacyObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineHLTObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerLSRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerFillRcd" )
      )
    ),
    DumpStat = cms.untracked.bool( False ),
    ReconnectEachRun = cms.untracked.bool( True ),
    RefreshAlways = cms.untracked.bool( False ),
    RefreshEachRun = cms.untracked.bool( True ),
    RefreshOpenIOVs = cms.untracked.bool( False ),
    pfnPostfix = cms.untracked.string( "" ),
    pfnPrefix = cms.untracked.string( "" )
)
process.HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
    appendToDataLabel = cms.string( "HBHE" ),
    timeSlewParametersM2 = cms.VPSet( 
      cms.PSet(  tmax = cms.double( 16.0 ),
        tzero = cms.double( 23.960177 ),
        slope = cms.double( -3.178648 )
      ),
      cms.PSet(  tmax = cms.double( 10.0 ),
        tzero = cms.double( 11.977461 ),
        slope = cms.double( -1.5610227 )
      ),
      cms.PSet(  tmax = cms.double( 6.25 ),
        tzero = cms.double( 9.109694 ),
        slope = cms.double( -1.075824 )
      )
    ),
    timeSlewParametersM3 = cms.VPSet( 
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 32.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -3.2 ),
        tspar0 = cms.double( 15.5 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      )
    )
)
process.HepPDTESSource = cms.ESSource( "HepPDTESSource",
    pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
process.ecalMultifitParametersSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMultifitParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.eegeom = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMappingRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
    fromDDD = cms.untracked.bool( False ),
    toGet = cms.untracked.vstring( 'GainWidths' )
)
process.hcalMahiPulseOffsetsGPUESProducer = cms.ESSource( "HcalMahiPulseOffsetsGPUESProducer",
    pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
    appendToDataLabel = cms.string( "" )
)
process.hltESSBTagRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JetTagComputerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSJobConfigurationGPURecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JobConfigurationGPURecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALParamsRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALParamsRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALTopologyRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALTopologyRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSTfGraphRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "TfGraphRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
    RunType = cms.string( "Run3" ),
    PitchSimY = cms.double( 0.15 ),
    PitchSimX = cms.double( 0.1 ),
    thickness = cms.double( 0.23 ),
    noOfPixelSimX = cms.int32( 160 ),
    noOfPixelSimY = cms.int32( 104 ),
    noOfPixels = cms.int32( 16640 ),
    simXWidth = cms.double( 16.6 ),
    simYWidth = cms.double( 16.2 ),
    deadEdgeWidth = cms.double( 0.2 ),
    activeEdgeSigma = cms.double( 0.02 ),
    physActiveEdgeDist = cms.double( 0.15 ),
    appendToDataLabel = cms.string( "" )
)

process.AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
process.CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
process.CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  debugV = cms.untracked.bool( False )
)
process.CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
process.CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
process.CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
process.CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
process.CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
process.ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  DDDetector = cms.ESInputTag( "","" ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  attribute = cms.string( "MuStructure" ),
  value = cms.string( "MuonBarrelDT" ),
  applyAlignment = cms.bool( True )
)
process.DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
process.EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  maxExtrapolationTimeInSec = cms.uint32( 0 ),
  appendToDataLabel = cms.string( "" )
)
process.EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.GEMGeometryESModule = cms.ESProducer( "GEMGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  applyAlignment = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
process.HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  MergePosition = cms.untracked.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  label = cms.untracked.string( "ParabolicMf" ),
  valueOverride = cms.int32( -1 )
)
process.PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  fromDDD = cms.untracked.bool( False ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.SiPixelTemplateStoreESProducer = cms.ESProducer( "SiPixelTemplateStoreESProducer",
  appendToDataLabel = cms.string( "" )
)
process.SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  appendToDataLabel = cms.string( "" ),
  printDebug = cms.untracked.bool( False ),
  AutomaticNormalization = cms.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  )
)
process.SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  ),
  ReduceGranularity = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  PrintDebugOutput = cms.bool( False ),
  UseEmptyRunInfo = cms.bool( False )
)
process.SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  PreFilter = cms.bool( False )
)
process.SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
process.SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 )
)
process.SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
process.TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
process.VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  label = cms.untracked.string( "" ),
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 )
)
process.ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "" )
)
process.ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  lhcInfoPerFillLabel = cms.string( "" ),
  lhcInfoPerLSLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  useNewLHCInfo = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.ecalElectronicsMappingHostESProducer = cms.ESProducer( "EcalElectronicsMappingHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalMultifitConditionsHostESProducer = cms.ESProducer( "EcalMultifitConditionsHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalMultifitParametersHostESProducer = cms.ESProducer( "EcalMultifitParametersHostESProducer@alpaka",
  EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
  EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
  EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
  EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
process.hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
process.hcalChannelQualityGPUESProducer = cms.ESProducer( "HcalChannelQualityGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "withTopoEff" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.hcalElectronicsMappingGPUESProducer = cms.ESProducer( "HcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainWidthsGPUESProducer = cms.ESProducer( "HcalGainWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainsGPUESProducer = cms.ESProducer( "HcalGainsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalLUTCorrsGPUESProducer = cms.ESProducer( "HcalLUTCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIECodersGPUESProducer = cms.ESProducer( "HcalQIECodersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIETypesGPUESProducer = cms.ESProducer( "HcalQIETypesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring( '' ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring( 'HBHEIsolatedNoise',
        'HFAnomalousHit' ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHEOOTPU',
        'HBHEFlatNoise',
        'HBHENegativeNoise' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecoParamsWithPulseShapesGPUESProducer = cms.ESProducer( "HcalRecoParamsWithPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRespCorrsGPUESProducer = cms.ESProducer( "HcalRespCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMCharacteristicsGPUESProducer = cms.ESProducer( "HcalSiPMCharacteristicsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMParametersGPUESProducer = cms.ESProducer( "HcalSiPMParametersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalTimeCorrsGPUESProducer = cms.ESProducer( "HcalTimeCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
process.hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
process.hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
process.hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
process.hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
process.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( False ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
process.hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
process.hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
process.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
process.hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  ErrorRescaling = cms.double( 100.0 ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
process.hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
process.hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
process.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
process.hltESPPFClusterParams = cms.ESProducer( "PFClusterParamsESProducer@alpaka",
  seedFinder = cms.PSet( 
    thresholdsByDetector = cms.VPSet( 
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.125, 0.25, 0.35, 0.35 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.1375, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    nNeighbours = cms.int32( 4 )
  ),
  initialClusteringStep = cms.PSet(  thresholdsByDetector = cms.VPSet( 
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
    detector = cms.string( "HCAL_BARREL1" )
  ),
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    detector = cms.string( "HCAL_ENDCAP" )
  )
) ),
  pfClusterBuilder = cms.PSet( 
    minFracTot = cms.double( 1.0E-20 ),
    stoppingTolerance = cms.double( 1.0E-8 ),
    positionCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 1.0E-9 ),
      minFractionInCalc = cms.double( 1.0E-9 )
    ),
    maxIterations = cms.uint32( 5 ),
    recHitEnergyNorms = cms.VPSet( 
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    showerSigma = cms.double( 10.0 ),
    minFractionToKeep = cms.double( 1.0E-7 ),
    excludeOtherSeeds = cms.bool( True ),
    timeResolutionCalcBarrel = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    ),
    timeResolutionCalcEndcap = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    )
  ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPFRecHitHCALParams = cms.ESProducer( "PFRecHitHCALParamsESProducer@alpaka",
  energyThresholdsHB = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
  energyThresholdsHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPFRecHitHCALTopology = cms.ESProducer( "PFRecHitHCALTopologyESProducer@alpaka",
  usePFThresholdsFromDB = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEFastHIon = cms.ESProducer( "PixelCPEFastESProducerHIonPhase1",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEFastHIon" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPEFastParamsPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParams" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
process.hltESPSiPixelCablingSoA = cms.ESProducer( "SiPixelCablingSoAESProducer@alpaka",
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSiPixelGainCalibrationForHLTSoA = cms.ESProducer( "SiPixelGainCalibrationForHLTSoAESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
process.hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
process.hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackSelectionTfCKF = cms.ESProducer( "TfGraphDefProducer",
  ComponentName = cms.string( "hltESPTrackSelectionTfCKF" ),
  FileName = cms.FileInPath( "RecoTracker/FinalTrackSelectors/data/TrackTfClassifier/CKF_Run3_12_5_0_pre5.pb" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  usePhase2Stacks = cms.bool( False ),
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
process.hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltOnlineBeamSpotESProducer = cms.ESProducer( "OnlineBeamSpotESProducer",
  timeThreshold = cms.int32( 48 ),
  sigmaZThreshold = cms.double( 2.0 ),
  sigmaXYThreshold = cms.double( 4.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
process.hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
process.muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( True ),
  includeGEM = cms.bool( True ),
  includeME0 = cms.bool( False )
)
process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
process.preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
process.siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  siPixelQualityFromDbLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
process.siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
process.sistripconn = cms.ESProducer( "SiStripConnectivity" )
process.trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)

process.FastTimerService = cms.Service( "FastTimerService",
    printEventSummary = cms.untracked.bool( False ),
    printRunSummary = cms.untracked.bool( True ),
    printJobSummary = cms.untracked.bool( True ),
    writeJSONSummary = cms.untracked.bool( False ),
    jsonFileName = cms.untracked.string( "resources.json" ),
    enableDQM = cms.untracked.bool( True ),
    enableDQMbyModule = cms.untracked.bool( False ),
    enableDQMbyPath = cms.untracked.bool( False ),
    enableDQMbyLumiSection = cms.untracked.bool( True ),
    enableDQMbyProcesses = cms.untracked.bool( True ),
    enableDQMTransitions = cms.untracked.bool( False ),
    dqmTimeRange = cms.untracked.double( 2000.0 ),
    dqmTimeResolution = cms.untracked.double( 5.0 ),
    dqmMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmPathTimeRange = cms.untracked.double( 100.0 ),
    dqmPathTimeResolution = cms.untracked.double( 0.5 ),
    dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmModuleTimeRange = cms.untracked.double( 40.0 ),
    dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
    dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
    dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
    dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
    dqmPath = cms.untracked.string( "HLT/TimerService" ),
)
process.MessageLogger = cms.Service( "MessageLogger",
    suppressWarning = cms.untracked.vstring( 'hltL3MuonsIOHit',
      'hltL3MuonsOIHit',
      'hltL3MuonsOIState',
      'hltLightPFTracks',
      'hltOnlineBeamSpot',
      'hltPixelTracks',
      'hltPixelTracksForHighMult',
      'hltSiPixelClusters',
      'hltSiPixelDigis' ),
    suppressFwkInfo = cms.untracked.vstring(  ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    debugModules = cms.untracked.vstring(  ),
    cerr = cms.untracked.PSet( 
      INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      noTimeStamps = cms.untracked.bool( False ),
      FwkReport = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 0 )
      ),
      default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
      Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkSummary = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 10000000 )
      ),
      threshold = cms.untracked.string( "INFO" ),
      enableStatistics = cms.untracked.bool( False )
    ),
    suppressError = cms.untracked.vstring( 'hltL3TkTracksFromL2IOHit',
      'hltL3TkTracksFromL2OIHit',
      'hltL3TkTracksFromL2OIState',
      'hltOnlineBeamSpot' )
)
process.ThroughputService = cms.Service( "ThroughputService",
    eventRange = cms.untracked.uint32( 10000 ),
    eventResolution = cms.untracked.uint32( 1 ),
    printEventSummary = cms.untracked.bool( False ),
    enableDQM = cms.untracked.bool( True ),
    dqmPathByProcesses = cms.untracked.bool( True ),
    dqmPath = cms.untracked.string( "HLT/Throughput" ),
    timeRange = cms.untracked.double( 60000.0 ),
    timeResolution = cms.untracked.double( 5.828 )
)

process.hltGetRaw = cms.EDAnalyzer( "HLTGetRaw",
    RawDataCollection = cms.InputTag( "rawDataCollector" )
)
process.hltPSetMap = cms.EDProducer( "ParameterSetBlobProducer" )
process.hltBoolFalse = cms.EDFilter( "HLTBool",
    result = cms.bool( False )
)
process.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    FedIds = cms.vint32( 1404 ),
    Setup = cms.string( "stage2::GTSetup" ),
    FWId = cms.uint32( 0 ),
    DmxFWId = cms.uint32( 0 ),
    FWOverride = cms.bool( False ),
    TMTCheck = cms.bool( True ),
    CTP7 = cms.untracked.bool( False ),
    MTF7 = cms.untracked.bool( False ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    debug = cms.untracked.bool( False ),
    MinFeds = cms.uint32( 0 )
)
process.hltTriggerSummaryAOD = cms.EDProducer( "TriggerSummaryProducerAOD",
    throw = cms.bool( False ),
    processName = cms.string( "@" ),
    moduleLabelPatternsToMatch = cms.vstring( 'hlt*' ),
    moduleLabelPatternsToSkip = cms.vstring(  )
)
process.hltTriggerSummaryRAW = cms.EDProducer( "TriggerSummaryProducerRAW",
    processName = cms.string( "@" )
)

process.HLTriggerFirstPath = cms.Path( process.hltGetRaw + process.hltPSetMap + process.hltBoolFalse )
process.HLTriggerFinalPath = cms.Path( process.hltGtStage2Digis + process.hltTriggerSummaryAOD + process.hltTriggerSummaryRAW + process.hltBoolFalse )


process.schedule = cms.Schedule( *(process.HLTriggerFirstPath, process.HLTriggerFinalPath, ))


# source module (EDM inputs)
process.source = cms.Source( "PoolSource",
    fileNames = cms.untracked.vstring(
    ),
    inputCommands = cms.untracked.vstring(
        'keep *'
    )
)

# run the Full L1T emulator, then repack the data into a new RAW collection, to be used by the HLT
from HLTrigger.Configuration.CustomConfigs import L1REPACK
process = L1REPACK(process,"FullMC")

# add a single "keep *" output
process.hltOutputMinimal = cms.OutputModule( "PoolOutputModule",
    fileName = cms.untracked.string( "output.root" ),
    fastCloning = cms.untracked.bool( False ),
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string( 'AOD' ),
        filterName = cms.untracked.string( '' )
    ),
    outputCommands = cms.untracked.vstring( 'drop *',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep GlobalAlgBlkBXVector_*_*_*',                  
        'keep GlobalExtBlkBXVector_*_*_*',
        'keep l1tEGammaBXVector_*_EGamma_*',
        'keep l1tEtSumBXVector_*_EtSum_*',
        'keep l1tJetBXVector_*_Jet_*',
        'keep l1tMuonBXVector_*_Muon_*',
        'keep l1tTauBXVector_*_Tau_*',
    )
)
process.MinimalOutput = cms.FinalPath( process.hltOutputMinimal )
process.schedule.append( process.MinimalOutput )

# limit the number of events to be processed
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32( -1 )
)

# enable TrigReport, TimeReport and MultiThreading
process.options.wantSummary = True
process.options.numberOfThreads = 4
process.options.numberOfStreams = 0

# override the GlobalTag, connection string and pfnPrefix
if 'GlobalTag' in process.__dict__:
    from Configuration.AlCa.GlobalTag import GlobalTag as customiseGlobalTag
    process.GlobalTag = customiseGlobalTag(process.GlobalTag, globaltag = '140X_mcRun3_2024_realistic_EOR3_TkDPGv6', conditions = 'L1Menu_Collisions2024_v1_2_0_xml,L1TUtmTriggerMenuRcd,,,9999-12-31 23:59:59.000')

# show summaries from trigger analysers used at HLT
if 'MessageLogger' in process.__dict__:
    process.MessageLogger.TriggerSummaryProducerAOD = cms.untracked.PSet()
    process.MessageLogger.L1GtTrigReport = cms.untracked.PSet()
    process.MessageLogger.L1TGlobalSummary = cms.untracked.PSet()
    process.MessageLogger.HLTrigReport = cms.untracked.PSet()
    process.MessageLogger.FastReport = cms.untracked.PSet()
    process.MessageLogger.ThroughputService = cms.untracked.PSet()

# load the DQMStore and DQMRootOutputModule
process.load( "DQMServices.Core.DQMStore_cfi" )

process.dqmOutput = cms.OutputModule("DQMRootOutputModule",
    fileName = cms.untracked.string("DQMIO.root")
)

process.DQMOutput = cms.FinalPath( process.dqmOutput )
process.schedule.append( process.DQMOutput )

# add specific customizations
_customInfo = {}
_customInfo['menuType'  ]= "GRun"
_customInfo['globalTags']= {}
_customInfo['globalTags'][True ] = "auto:run3_hlt_GRun"
_customInfo['globalTags'][False] = "auto:run3_mc_GRun"
_customInfo['inputFiles']={}
_customInfo['inputFiles'][True]  = "file:RelVal_Raw_GRun_DATA.root"
_customInfo['inputFiles'][False] = "file:RelVal_Raw_GRun_MC.root"
_customInfo['maxEvents' ]=  -1
_customInfo['globalTag' ]= "140X_mcRun3_2024_realistic_EOR3_TkDPGv6"
_customInfo['inputFile' ]=  []
_customInfo['realData'  ]=  False

from HLTrigger.Configuration.customizeHLTforALL import customizeHLTforAll
process = customizeHLTforAll(process,"GRun",_customInfo)

from HLTrigger.Configuration.customizeHLTforCMSSW import customizeHLTforCMSSW
process = customizeHLTforCMSSW(process,"GRun")

# Eras-based customisations
from HLTrigger.Configuration.Eras import modifyHLTforEras
modifyHLTforEras(process)

#User-defined customization functions
from HLTrigger.Configuration.customizeHLTforEGamma import customiseEGammaMenuDev
process = customiseEGammaMenuDev(process)
from HLTrigger.Configuration.customizeHLTforEGamma import customiseEGammaInputContent
process = customiseEGammaInputContent(process)

